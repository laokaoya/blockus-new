{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/blockus new/blockus-game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;// 游戏棋盘组件\nimport React,{useState}from'react';import styled from'styled-components';import{canPlacePiece}from'../utils/gameEngine';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const BoardContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background: #f5f5f5;\\n  border-radius: 8px;\\n  padding: 20px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n\"])));const BoardTitle=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 0 0 20px 0;\\n  color: #333;\\n  font-size: 24px;\\n\"])));const BoardGrid=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(20, 1fr);\\n  grid-template-rows: repeat(20, 1fr);\\n  gap: 1px;\\n  background: #ccc;\\n  border: 2px solid #333;\\n  width: 600px;\\n  height: 600px;\\n  max-width: 90vw;\\n  max-height: 90vw;\\n\"])));const Cell=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  background: \",\";\\n  border: \",\";\\n  cursor: \",\";\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    transform: \",\";\\n    box-shadow: \",\";\\n  }\\n\"])),props=>{if(props.isOccupied){const colors=['transparent','#FF4444','#FFDD44','#4444FF','#44FF44'];return colors[props.playerColor]||'#ccc';}if(props.isHighlighted){return'rgba(255, 255, 0, 0.3)';}if(props.isCurrentTurn){return'rgba(0, 255, 0, 0.1)';}return'#fff';},props=>props.isHighlighted?'2px solid #FFD700':'1px solid #ddd',props=>props.isHighlighted?'pointer':'default',props=>props.isHighlighted?'scale(1.1)':'scale(1)',props=>props.isHighlighted?'0 0 8px rgba(255, 215, 0, 0.6)':'none');const GameBoard=_ref=>{let{gameState,onCellClick,onCellHover,onPiecePlace}=_ref;const{board,players,currentPlayerIndex,selectedPiece}=gameState;const currentPlayer=players[currentPlayerIndex];// 拖拽状态\nconst[isDragging,setIsDragging]=useState(false);const[mousePosition,setMousePosition]=useState({x:0,y:0});const[dragOffset,setDragOffset]=useState({x:0,y:0});// 检查拼图是否可以放置在指定位置\nconst canPlaceAt=(x,y)=>{if(!selectedPiece||currentPlayer.color!=='red')return false;const colorIndex=currentPlayerIndex+1;return canPlacePiece(board,selectedPiece,{x,y},colorIndex);};// 开始拖拽\nconst startDrag=(x,y)=>{if(!selectedPiece||currentPlayer.color!=='red')return;setIsDragging(true);setDragOffset({x:0,y:0});setMousePosition({x,y});};// 拖拽中\nconst handleDrag=e=>{if(!isDragging)return;const rect=e.currentTarget.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/(rect.width/20));const y=Math.floor((e.clientY-rect.top)/(rect.height/20));setMousePosition({x,y});};// 结束拖拽\nconst endDrag=()=>{if(!isDragging)return;setIsDragging(false);// 检查是否可以放置\nif(canPlaceAt(mousePosition.x,mousePosition.y)){onPiecePlace(mousePosition);}};const handleCellClick=(x,y)=>{if(isDragging)return;onCellClick({x,y});};const handleCellHover=(x,y)=>{if(isDragging)return;onCellHover({x,y});};// 检查位置是否在拼图范围内\nconst isPositionInPiece=(x,y,pieceX,pieceY)=>{var _shape$;if(!selectedPiece)return false;const{shape}=selectedPiece;const relativeX=x-pieceX;const relativeY=y-pieceY;return relativeY>=0&&relativeY<shape.length&&relativeX>=0&&relativeX<((_shape$=shape[0])===null||_shape$===void 0?void 0:_shape$.length)&&shape[relativeY][relativeX]===1;};return/*#__PURE__*/_jsxs(BoardContainer,{children:[/*#__PURE__*/_jsxs(BoardTitle,{children:[currentPlayer.name,\"\\u7684\\u56DE\\u5408\",currentPlayer.color==='red'&&\" - \\u5269\\u4F59\\u65F6\\u95F4: \".concat(gameState.timeLeft,\"\\u79D2\")]}),/*#__PURE__*/_jsx(BoardGrid,{onMouseMove:handleDrag,onMouseUp:endDrag,onMouseLeave:endDrag,children:board.map((row,y)=>row.map((cell,x)=>/*#__PURE__*/_jsx(Cell,{isOccupied:cell!==0,playerColor:cell,isHighlighted:isDragging&&canPlaceAt(mousePosition.x,mousePosition.y)&&isPositionInPiece(x,y,mousePosition.x,mousePosition.y),isCurrentTurn:currentPlayer.isCurrentTurn,onClick:()=>handleCellClick(x,y),onMouseEnter:()=>handleCellHover(x,y),onMouseDown:()=>startDrag(x,y)},\"\".concat(x,\"-\").concat(y))))})]});};export default GameBoard;","map":{"version":3,"names":["React","useState","styled","canPlacePiece","jsxs","_jsxs","jsx","_jsx","BoardContainer","div","_templateObject","_taggedTemplateLiteral","BoardTitle","h2","_templateObject2","BoardGrid","_templateObject3","Cell","_templateObject4","props","isOccupied","colors","playerColor","isHighlighted","isCurrentTurn","GameBoard","_ref","gameState","onCellClick","onCellHover","onPiecePlace","board","players","currentPlayerIndex","selectedPiece","currentPlayer","isDragging","setIsDragging","mousePosition","setMousePosition","x","y","dragOffset","setDragOffset","canPlaceAt","color","colorIndex","startDrag","handleDrag","e","rect","currentTarget","getBoundingClientRect","Math","floor","clientX","left","width","clientY","top","height","endDrag","handleCellClick","handleCellHover","isPositionInPiece","pieceX","pieceY","_shape$","shape","relativeX","relativeY","length","children","name","concat","timeLeft","onMouseMove","onMouseUp","onMouseLeave","map","row","cell","onClick","onMouseEnter","onMouseDown"],"sources":["D:/blockus new/blockus-game/src/components/GameBoard.tsx"],"sourcesContent":["// 游戏棋盘组件\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameState, Position, Piece } from '../types/game';\r\nimport { canPlacePiece } from '../utils/gameEngine';\r\n\r\ninterface GameBoardProps {\r\n  gameState: GameState;\r\n  onCellClick: (position: Position) => void;\r\n  onCellHover: (position: Position) => void;\r\n  onPiecePlace: (position: Position) => void;\r\n}\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst BoardTitle = styled.h2`\r\n  margin: 0 0 20px 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst BoardGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(20, 1fr);\r\n  grid-template-rows: repeat(20, 1fr);\r\n  gap: 1px;\r\n  background: #ccc;\r\n  border: 2px solid #333;\r\n  width: 600px;\r\n  height: 600px;\r\n  max-width: 90vw;\r\n  max-height: 90vw;\r\n`;\r\n\r\nconst Cell = styled.div<{ \r\n  isOccupied: boolean; \r\n  playerColor: number;\r\n  isHighlighted: boolean;\r\n  isCurrentTurn: boolean;\r\n}>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => {\r\n    if (props.isOccupied) {\r\n      const colors = ['transparent', '#FF4444', '#FFDD44', '#4444FF', '#44FF44'];\r\n      return colors[props.playerColor] || '#ccc';\r\n    }\r\n    if (props.isHighlighted) {\r\n      return 'rgba(255, 255, 0, 0.3)';\r\n    }\r\n    if (props.isCurrentTurn) {\r\n      return 'rgba(0, 255, 0, 0.1)';\r\n    }\r\n    return '#fff';\r\n  }};\r\n  border: ${props => props.isHighlighted ? '2px solid #FFD700' : '1px solid #ddd'};\r\n  cursor: ${props => props.isHighlighted ? 'pointer' : 'default'};\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: ${props => props.isHighlighted ? 'scale(1.1)' : 'scale(1)'};\r\n    box-shadow: ${props => props.isHighlighted ? '0 0 8px rgba(255, 215, 0, 0.6)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst GameBoard: React.FC<GameBoardProps> = ({ \r\n  gameState, \r\n  onCellClick, \r\n  onCellHover,\r\n  onPiecePlace\r\n}) => {\r\n  const { board, players, currentPlayerIndex, selectedPiece } = gameState;\r\n  const currentPlayer = players[currentPlayerIndex];\r\n  \r\n  // 拖拽状态\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [mousePosition, setMousePosition] = useState<Position>({ x: 0, y: 0 });\r\n  const [dragOffset, setDragOffset] = useState<Position>({ x: 0, y: 0 });\r\n  \r\n  // 检查拼图是否可以放置在指定位置\r\n  const canPlaceAt = (x: number, y: number): boolean => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return false;\r\n    \r\n    const colorIndex = currentPlayerIndex + 1;\r\n    return canPlacePiece(board, selectedPiece, { x, y }, colorIndex);\r\n  };\r\n  \r\n  // 开始拖拽\r\n  const startDrag = (x: number, y: number) => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\r\n    \r\n    setIsDragging(true);\r\n    setDragOffset({ x: 0, y: 0 });\r\n    setMousePosition({ x, y });\r\n  };\r\n  \r\n  // 拖拽中\r\n  const handleDrag = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n    \r\n    setMousePosition({ x, y });\r\n  };\r\n  \r\n  // 结束拖拽\r\n  const endDrag = () => {\r\n    if (!isDragging) return;\r\n    \r\n    setIsDragging(false);\r\n    \r\n    // 检查是否可以放置\r\n    if (canPlaceAt(mousePosition.x, mousePosition.y)) {\r\n      onPiecePlace(mousePosition);\r\n    }\r\n  };\r\n  \r\n  const handleCellClick = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellClick({ x, y });\r\n  };\r\n  \r\n  const handleCellHover = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellHover({ x, y });\r\n  };\r\n  \r\n  // 检查位置是否在拼图范围内\r\n  const isPositionInPiece = (x: number, y: number, pieceX: number, pieceY: number): boolean => {\r\n    if (!selectedPiece) return false;\r\n    \r\n    const { shape } = selectedPiece;\r\n    const relativeX = x - pieceX;\r\n    const relativeY = y - pieceY;\r\n    \r\n    return relativeY >= 0 && relativeY < shape.length && \r\n           relativeX >= 0 && relativeX < shape[0]?.length && \r\n           shape[relativeY][relativeX] === 1;\r\n  };\r\n  \r\n  return (\r\n    <BoardContainer>\r\n      <BoardTitle>\r\n        {currentPlayer.name}的回合\r\n        {currentPlayer.color === 'red' && ` - 剩余时间: ${gameState.timeLeft}秒`}\r\n      </BoardTitle>\r\n      <BoardGrid\r\n        onMouseMove={handleDrag}\r\n        onMouseUp={endDrag}\r\n        onMouseLeave={endDrag}\r\n      >\r\n        {board.map((row, y) =>\r\n          row.map((cell, x) => (\r\n            <Cell\r\n              key={`${x}-${y}`}\r\n              isOccupied={cell !== 0}\r\n              playerColor={cell}\r\n              isHighlighted={isDragging && canPlaceAt(mousePosition.x, mousePosition.y) && \r\n                isPositionInPiece(x, y, mousePosition.x, mousePosition.y)}\r\n              isCurrentTurn={currentPlayer.isCurrentTurn}\r\n              onClick={() => handleCellClick(x, y)}\r\n              onMouseEnter={() => handleCellHover(x, y)}\r\n              onMouseDown={() => startDrag(x, y)}\r\n            />\r\n          ))\r\n        )}\r\n      </BoardGrid>\r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}