{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockus new\\\\blockus-game\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\n// 主游戏组件\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useGameState } from '../hooks/useGameState';\nimport GameBoard from './GameBoard';\nimport PlayerPieceLibrary from './PlayerPieceLibrary';\nimport AIPlayersInfo from './AIPlayersInfo';\nimport GameControls from './GameControls';\nimport { canPlacePiece } from '../utils/gameEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n`;\n_c = GameContainer;\nconst GameHeader = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n_c2 = GameHeader;\nconst GameTitle = styled.h1`\n  color: white;\n  font-size: 36px;\n  margin: 0;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c3 = GameTitle;\nconst GameSubtitle = styled.p`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 18px;\n  margin: 10px 0 0 0;\n`;\n_c4 = GameSubtitle;\nconst GameContent = styled.div`\n  display: flex;\n  gap: 20px;\n  flex: 1;\n  justify-content: center;\n  align-items: flex-start;\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n_c5 = GameContent;\nconst LeftPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-width: 320px;\n`;\n_c6 = LeftPanel;\nconst CenterPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n_c7 = CenterPanel;\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-width: 280px;\n`;\n_c8 = RightPanel;\nconst Game = () => {\n  _s();\n  const {\n    gameState,\n    selectPiece,\n    placePieceOnBoard,\n    settlePlayer,\n    resetGame\n  } = useGameState();\n  const [hoveredPosition, setHoveredPosition] = useState(null);\n  const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n  const player = gameState.players[0]; // 玩家（红色）\n  const aiPlayers = gameState.players.slice(1); // AI玩家\n\n  // 处理拼图选择\n  const handlePieceSelect = piece => {\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\n      selectPiece(piece);\n    }\n  };\n\n  // 处理拼图拖拽开始\n  const handleStartDrag = (piece, e) => {\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\n      selectPiece(piece);\n      // 通知GameBoard开始拖拽\n      const gameBoard = document.querySelector('[data-board-grid]');\n      if (gameBoard) {\n        const customEvent = new CustomEvent('startDragFromLibrary', {\n          detail: {\n            piece,\n            clientX: e.clientX,\n            clientY: e.clientY\n          }\n        });\n        gameBoard.dispatchEvent(customEvent);\n      }\n    }\n  };\n\n  // 处理拼图取消选择\n  const handlePieceCancel = () => {\n    // 取消选择当前拼图\n    selectPiece(null);\n  };\n\n  // 处理棋盘点击\n  const handleBoardClick = position => {\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\n      const success = placePieceOnBoard(position);\n      if (success) {\n        console.log('拼图放置成功');\n      } else {\n        console.log('无法在此位置放置拼图');\n      }\n    }\n  };\n\n  // 处理拼图放置（拖拽结束）\n  const handlePiecePlace = position => {\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\n      const success = placePieceOnBoard(position);\n      if (success) {\n        console.log('拼图放置成功');\n      } else {\n        console.log('无法在此位置放置拼图');\n      }\n    }\n  };\n\n  // 处理棋盘悬停\n  const handleBoardHover = position => {\n    setHoveredPosition(position);\n  };\n\n  // 处理结算\n  const handleSettle = () => {\n    settlePlayer();\n  };\n\n  // 处理重置游戏\n  const handleReset = () => {\n    resetGame();\n  };\n\n  // 检查拼图是否可以放置在指定位置\n  const canPlaceAt = (x, y) => {\n    if (!gameState.selectedPiece || currentPlayer.color !== 'red') return false;\n    const colorIndex = 1; // 红色玩家的索引\n    return canPlacePiece(gameState.board, gameState.selectedPiece, {\n      x,\n      y\n    }, colorIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n        children: \"Blockus \\u65B9\\u683C\\u5927\\u6218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameSubtitle, {\n        children: \"\\u7ECF\\u5178\\u7B56\\u7565\\u62FC\\u56FE\\u6E38\\u620F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        children: /*#__PURE__*/_jsxDEV(PlayerPieceLibrary, {\n          player: player,\n          selectedPiece: gameState.selectedPiece,\n          onPieceSelect: handlePieceSelect,\n          onStartDrag: handleStartDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterPanel, {\n        children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n          gameState: gameState,\n          onCellClick: handleBoardClick,\n          onCellHover: handleBoardHover,\n          onPiecePlace: handlePiecePlace,\n          onPieceCancel: handlePieceCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameControls, {\n          gameState: gameState,\n          onSettle: handleSettle,\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        children: /*#__PURE__*/_jsxDEV(AIPlayersInfo, {\n          aiPlayers: aiPlayers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"zqnM5HylIEx8gjMmcMSAJJgcbB8=\", false, function () {\n  return [useGameState];\n});\n_c9 = Game;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"GameHeader\");\n$RefreshReg$(_c3, \"GameTitle\");\n$RefreshReg$(_c4, \"GameSubtitle\");\n$RefreshReg$(_c5, \"GameContent\");\n$RefreshReg$(_c6, \"LeftPanel\");\n$RefreshReg$(_c7, \"CenterPanel\");\n$RefreshReg$(_c8, \"RightPanel\");\n$RefreshReg$(_c9, \"Game\");","map":{"version":3,"names":["React","useState","styled","useGameState","GameBoard","PlayerPieceLibrary","AIPlayersInfo","GameControls","canPlacePiece","jsxDEV","_jsxDEV","GameContainer","div","_c","GameHeader","_c2","GameTitle","h1","_c3","GameSubtitle","p","_c4","GameContent","_c5","LeftPanel","_c6","CenterPanel","_c7","RightPanel","_c8","Game","_s","gameState","selectPiece","placePieceOnBoard","settlePlayer","resetGame","hoveredPosition","setHoveredPosition","currentPlayer","players","currentPlayerIndex","player","aiPlayers","slice","handlePieceSelect","piece","color","isUsed","handleStartDrag","e","gameBoard","document","querySelector","customEvent","CustomEvent","detail","clientX","clientY","dispatchEvent","handlePieceCancel","handleBoardClick","position","selectedPiece","success","console","log","handlePiecePlace","handleBoardHover","handleSettle","handleReset","canPlaceAt","x","y","colorIndex","board","children","fileName","_jsxFileName","lineNumber","columnNumber","onPieceSelect","onStartDrag","onCellClick","onCellHover","onPiecePlace","onPieceCancel","onSettle","onReset","_c9","$RefreshReg$"],"sources":["D:/blockus new/blockus-game/src/components/Game.tsx"],"sourcesContent":["// 主游戏组件\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGameState } from '../hooks/useGameState';\r\nimport GameBoard from './GameBoard';\r\nimport PlayerPieceLibrary from './PlayerPieceLibrary';\r\nimport AIPlayersInfo from './AIPlayersInfo';\r\nimport GameControls from './GameControls';\r\nimport { Position, Piece } from '../types/game';\r\nimport { canPlacePiece } from '../utils/gameEngine';\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 20px;\r\n`;\r\n\r\nconst GameHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst GameTitle = styled.h1`\r\n  color: white;\r\n  font-size: 36px;\r\n  margin: 0;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst GameSubtitle = styled.p`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 18px;\r\n  margin: 10px 0 0 0;\r\n`;\r\n\r\nconst GameContent = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-width: 320px;\r\n`;\r\n\r\nconst CenterPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-width: 280px;\r\n`;\r\n\r\nconst Game: React.FC = () => {\r\n  const { gameState, selectPiece, placePieceOnBoard, settlePlayer, resetGame } = useGameState();\r\n  const [hoveredPosition, setHoveredPosition] = useState<Position | null>(null);\r\n  \r\n  const currentPlayer = gameState.players[gameState.currentPlayerIndex];\r\n  const player = gameState.players[0]; // 玩家（红色）\r\n  const aiPlayers = gameState.players.slice(1); // AI玩家\r\n  \r\n  // 处理拼图选择\r\n  const handlePieceSelect = (piece: Piece) => {\r\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\r\n      selectPiece(piece);\r\n    }\r\n  };\r\n  \r\n  // 处理拼图拖拽开始\r\n  const handleStartDrag = (piece: Piece, e: React.MouseEvent) => {\r\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\r\n      selectPiece(piece);\r\n      // 通知GameBoard开始拖拽\r\n      const gameBoard = document.querySelector('[data-board-grid]');\r\n      if (gameBoard) {\r\n        const customEvent = new CustomEvent('startDragFromLibrary', {\r\n          detail: { piece, clientX: e.clientX, clientY: e.clientY }\r\n        });\r\n        gameBoard.dispatchEvent(customEvent);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 处理拼图取消选择\r\n  const handlePieceCancel = () => {\r\n    // 取消选择当前拼图\r\n    selectPiece(null);\r\n  };\r\n  \r\n  // 处理棋盘点击\r\n  const handleBoardClick = (position: Position) => {\r\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\r\n      const success = placePieceOnBoard(position);\r\n      if (success) {\r\n        console.log('拼图放置成功');\r\n      } else {\r\n        console.log('无法在此位置放置拼图');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 处理拼图放置（拖拽结束）\r\n  const handlePiecePlace = (position: Position) => {\r\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\r\n      const success = placePieceOnBoard(position);\r\n      if (success) {\r\n        console.log('拼图放置成功');\r\n      } else {\r\n        console.log('无法在此位置放置拼图');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 处理棋盘悬停\r\n  const handleBoardHover = (position: Position) => {\r\n    setHoveredPosition(position);\r\n  };\r\n  \r\n  // 处理结算\r\n  const handleSettle = () => {\r\n    settlePlayer();\r\n  };\r\n  \r\n  // 处理重置游戏\r\n  const handleReset = () => {\r\n    resetGame();\r\n  };\r\n  \r\n  // 检查拼图是否可以放置在指定位置\r\n  const canPlaceAt = (x: number, y: number): boolean => {\r\n    if (!gameState.selectedPiece || currentPlayer.color !== 'red') return false;\r\n    \r\n    const colorIndex = 1; // 红色玩家的索引\r\n    return canPlacePiece(gameState.board, gameState.selectedPiece, { x, y }, colorIndex);\r\n  };\r\n  \r\n  return (\r\n    <GameContainer>\r\n      <GameHeader>\r\n        <GameTitle>Blockus 方格大战</GameTitle>\r\n        <GameSubtitle>经典策略拼图游戏</GameSubtitle>\r\n      </GameHeader>\r\n      \r\n      <GameContent>\r\n        {/* 左侧：玩家拼图库 */}\r\n        <LeftPanel>\r\n          <PlayerPieceLibrary\r\n            player={player}\r\n            selectedPiece={gameState.selectedPiece}\r\n            onPieceSelect={handlePieceSelect}\r\n            onStartDrag={handleStartDrag}\r\n          />\r\n        </LeftPanel>\r\n        \r\n        {/* 中央：游戏棋盘和控制 */}\r\n        <CenterPanel>\r\n          <GameBoard\r\n            gameState={gameState}\r\n            onCellClick={handleBoardClick}\r\n            onCellHover={handleBoardHover}\r\n            onPiecePlace={handlePiecePlace}\r\n            onPieceCancel={handlePieceCancel}\r\n          />\r\n          \r\n          <GameControls\r\n            gameState={gameState}\r\n            onSettle={handleSettle}\r\n            onReset={handleReset}\r\n          />\r\n        </CenterPanel>\r\n        \r\n        {/* 右侧：AI玩家信息 */}\r\n        <RightPanel>\r\n          <AIPlayersInfo aiPlayers={aiPlayers} />\r\n        </RightPanel>\r\n      </GameContent>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}