{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockus new\\\\blockus-game\\\\src\\\\components\\\\GameBoard.tsx\",\n  _s = $RefreshSig$();\n// 游戏棋盘组件\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { canPlacePiece } from '../utils/gameEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #f5f5f5;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n_c = BoardContainer;\nconst BoardTitle = styled.h2`\n  margin: 0 0 20px 0;\n  color: #333;\n  font-size: 24px;\n`;\n_c2 = BoardTitle;\nconst BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(20, 1fr);\n  grid-template-rows: repeat(20, 1fr);\n  gap: 1px;\n  background: #ccc;\n  border: 2px solid #333;\n  width: 600px;\n  height: 600px;\n  max-width: 90vw;\n  max-height: 90vw;\n`;\n_c3 = BoardGrid;\nconst Cell = styled.div`\n  width: 100%;\n  height: 100%;\n  background: ${props => {\n  if (props.isOccupied) {\n    const colors = ['transparent', '#FF4444', '#FFDD44', '#4444FF', '#44FF44'];\n    return colors[props.playerColor] || '#ccc';\n  }\n  if (props.isHighlighted) {\n    return 'rgba(255, 255, 0, 0.3)';\n  }\n  if (props.isInvalid) {\n    return 'rgba(255, 0, 0, 0.2)';\n  }\n  if (props.isCurrentTurn) {\n    return 'rgba(0, 255, 0, 0.1)';\n  }\n  return '#fff';\n}};\n  border: ${props => {\n  if (props.isHighlighted) return '2px solid #FFD700';\n  if (props.isInvalid) return '2px solid #FF4444';\n  return '1px solid #ddd';\n}};\n  cursor: ${props => props.isHighlighted ? 'pointer' : 'default'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: ${props => props.isHighlighted ? 'scale(1.1)' : 'scale(1)'};\n    box-shadow: ${props => props.isHighlighted ? '0 0 8px rgba(255, 215, 0, 0.6)' : 'none'};\n  }\n`;\n\n// 跟随鼠标的拼图预览\n_c4 = Cell;\nconst DraggingPiecePreview = styled.div`\n  position: absolute;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  pointer-events: none;\n  opacity: ${props => props.isVisible ? 0.7 : 0};\n  transition: opacity 0.1s ease;\n  z-index: 1000;\n`;\n_c5 = DraggingPiecePreview;\nconst PreviewPieceShape = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.cols}, 20px);\n  grid-template-rows: repeat($props => props.rows}, 20px);\n  gap: 1px;\n  background: rgba(255, 255, 255, 0.9);\n  border: 2px solid #FFD700;\n  border-radius: 4px;\n  padding: 2px;\n`;\n_c6 = PreviewPieceShape;\nconst PreviewCell = styled.div`\n  width: 20px;\n  height: 20px;\n  background: ${props => props.isFilled ? '#FF4444' : 'transparent'};\n  border-radius: 2px;\n`;\n_c7 = PreviewCell;\nconst GameBoard = ({\n  gameState,\n  onCellClick,\n  onCellHover,\n  onPiecePlace\n}) => {\n  _s();\n  var _selectedPiece$shape$;\n  const {\n    board,\n    players,\n    currentPlayerIndex,\n    selectedPiece\n  } = gameState;\n  const currentPlayer = players[currentPlayerIndex];\n\n  // 拖拽状态\n  const [isDragging, setIsDragging] = useState(false);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [mouseScreenPosition, setMouseScreenPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 检查拼图是否可以放置在指定位置\n  const canPlaceAt = (x, y) => {\n    if (!selectedPiece || currentPlayer.color !== 'red') return false;\n    const colorIndex = currentPlayerIndex + 1;\n    return canPlacePiece(board, selectedPiece, {\n      x,\n      y\n    }, colorIndex);\n  };\n\n  // 开始拖拽\n  const startDrag = (x, y, e) => {\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\n    setIsDragging(true);\n    setDragOffset({\n      x: 0,\n      y: 0\n    });\n    setMousePosition({\n      x,\n      y\n    });\n    setMouseScreenPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  // 从拼图库开始拖拽\n  const startDragFromLibrary = e => {\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\n    setIsDragging(true);\n    setMouseScreenPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    // 计算棋盘上的初始位置\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\n    setMousePosition({\n      x,\n      y\n    });\n  };\n\n  // 拖拽中\n  const handleDrag = e => {\n    if (!isDragging) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\n    setMousePosition({\n      x,\n      y\n    });\n    setMouseScreenPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  // 结束拖拽\n  const endDrag = () => {\n    if (!isDragging) return;\n    setIsDragging(false);\n\n    // 检查是否可以放置\n    if (canPlaceAt(mousePosition.x, mousePosition.y)) {\n      onPiecePlace(mousePosition);\n    }\n  };\n  const handleCellClick = (x, y) => {\n    if (isDragging) return;\n    onCellClick({\n      x,\n      y\n    });\n  };\n  const handleCellHover = (x, y) => {\n    if (isDragging) return;\n    onCellHover({\n      x,\n      y\n    });\n  };\n\n  // 检查位置是否在拼图范围内\n  const isPositionInPiece = (x, y, pieceX, pieceY) => {\n    var _shape$;\n    if (!selectedPiece) return false;\n    const {\n      shape\n    } = selectedPiece;\n    const relativeX = x - pieceX;\n    const relativeY = y - pieceY;\n    return relativeY >= 0 && relativeY < shape.length && relativeX >= 0 && relativeX < ((_shape$ = shape[0]) === null || _shape$ === void 0 ? void 0 : _shape$.length) && shape[relativeY][relativeX] === 1;\n  };\n\n  // 检查位置是否应该高亮（可放置）\n  const shouldHighlight = (x, y) => {\n    if (!isDragging || !selectedPiece) return false;\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && canPlaceAt(mousePosition.x, mousePosition.y);\n  };\n\n  // 检查位置是否应该显示无效提示（不可放置）\n  const shouldShowInvalid = (x, y) => {\n    if (!isDragging || !selectedPiece) return false;\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && !canPlaceAt(mousePosition.x, mousePosition.y);\n  };\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BoardTitle, {\n      children: [currentPlayer.name, \"\\u7684\\u56DE\\u5408\", currentPlayer.color === 'red' && ` - 剩余时间: ${gameState.timeLeft}秒`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoardGrid, {\n      onMouseMove: handleDrag,\n      onMouseUp: endDrag,\n      onMouseLeave: endDrag,\n      children: board.map((row, y) => row.map((cell, x) => /*#__PURE__*/_jsxDEV(Cell, {\n        isOccupied: cell !== 0,\n        playerColor: cell,\n        isHighlighted: isDragging && canPlaceAt(mousePosition.x, mousePosition.y) && isPositionInPiece(x, y, mousePosition.x, mousePosition.y),\n        isCurrentTurn: currentPlayer.isCurrentTurn,\n        onClick: () => handleCellClick(x, y),\n        onMouseEnter: () => handleCellHover(x, y),\n        onMouseDown: e => startDrag(x, y, e)\n      }, `${x}-${y}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), isDragging && selectedPiece && /*#__PURE__*/_jsxDEV(DraggingPiecePreview, {\n      x: mouseScreenPosition.x - 30,\n      y: mouseScreenPosition.y - 30,\n      isVisible: isDragging,\n      children: /*#__PURE__*/_jsxDEV(PreviewPieceShape, {\n        rows: selectedPiece.shape.length,\n        cols: ((_selectedPiece$shape$ = selectedPiece.shape[0]) === null || _selectedPiece$shape$ === void 0 ? void 0 : _selectedPiece$shape$.length) || 1,\n        children: selectedPiece.shape.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(PreviewCell, {\n          isFilled: cell === 1\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"ZJ57ylFvGw5IDDphFSolpaAFKro=\");\n_c8 = GameBoard;\nexport default GameBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"BoardContainer\");\n$RefreshReg$(_c2, \"BoardTitle\");\n$RefreshReg$(_c3, \"BoardGrid\");\n$RefreshReg$(_c4, \"Cell\");\n$RefreshReg$(_c5, \"DraggingPiecePreview\");\n$RefreshReg$(_c6, \"PreviewPieceShape\");\n$RefreshReg$(_c7, \"PreviewCell\");\n$RefreshReg$(_c8, \"GameBoard\");","map":{"version":3,"names":["React","useState","styled","canPlacePiece","jsxDEV","_jsxDEV","BoardContainer","div","_c","BoardTitle","h2","_c2","BoardGrid","_c3","Cell","props","isOccupied","colors","playerColor","isHighlighted","isInvalid","isCurrentTurn","_c4","DraggingPiecePreview","x","y","isVisible","_c5","PreviewPieceShape","cols","_c6","PreviewCell","isFilled","_c7","GameBoard","gameState","onCellClick","onCellHover","onPiecePlace","_s","_selectedPiece$shape$","board","players","currentPlayerIndex","selectedPiece","currentPlayer","isDragging","setIsDragging","mousePosition","setMousePosition","mouseScreenPosition","setMouseScreenPosition","dragOffset","setDragOffset","canPlaceAt","color","colorIndex","startDrag","e","clientX","clientY","startDragFromLibrary","rect","currentTarget","getBoundingClientRect","Math","floor","left","width","top","height","handleDrag","endDrag","handleCellClick","handleCellHover","isPositionInPiece","pieceX","pieceY","_shape$","shape","relativeX","relativeY","length","shouldHighlight","shouldShowInvalid","children","name","timeLeft","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseUp","onMouseLeave","map","row","cell","onClick","onMouseEnter","onMouseDown","rows","rowIndex","colIndex","_c8","$RefreshReg$"],"sources":["D:/blockus new/blockus-game/src/components/GameBoard.tsx"],"sourcesContent":["// 游戏棋盘组件\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameState, Position, Piece } from '../types/game';\r\nimport { canPlacePiece } from '../utils/gameEngine';\r\n\r\ninterface GameBoardProps {\r\n  gameState: GameState;\r\n  onCellClick: (position: Position) => void;\r\n  onCellHover: (position: Position) => void;\r\n  onPiecePlace: (position: Position) => void;\r\n}\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst BoardTitle = styled.h2`\r\n  margin: 0 0 20px 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst BoardGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(20, 1fr);\r\n  grid-template-rows: repeat(20, 1fr);\r\n  gap: 1px;\r\n  background: #ccc;\r\n  border: 2px solid #333;\r\n  width: 600px;\r\n  height: 600px;\r\n  max-width: 90vw;\r\n  max-height: 90vw;\r\n`;\r\n\r\nconst Cell = styled.div<{ \r\n  isOccupied: boolean; \r\n  playerColor: number;\r\n  isHighlighted: boolean;\r\n  isInvalid: boolean;\r\n  isCurrentTurn: boolean;\r\n}>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => {\r\n    if (props.isOccupied) {\r\n      const colors = ['transparent', '#FF4444', '#FFDD44', '#4444FF', '#44FF44'];\r\n      return colors[props.playerColor] || '#ccc';\r\n    }\r\n    if (props.isHighlighted) {\r\n      return 'rgba(255, 255, 0, 0.3)';\r\n    }\r\n    if (props.isInvalid) {\r\n      return 'rgba(255, 0, 0, 0.2)';\r\n    }\r\n    if (props.isCurrentTurn) {\r\n      return 'rgba(0, 255, 0, 0.1)';\r\n    }\r\n    return '#fff';\r\n  }};\r\n  border: ${props => {\r\n    if (props.isHighlighted) return '2px solid #FFD700';\r\n    if (props.isInvalid) return '2px solid #FF4444';\r\n    return '1px solid #ddd';\r\n  }};\r\n  cursor: ${props => props.isHighlighted ? 'pointer' : 'default'};\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: ${props => props.isHighlighted ? 'scale(1.1)' : 'scale(1)'};\r\n    box-shadow: ${props => props.isHighlighted ? '0 0 8px rgba(255, 215, 0, 0.6)' : 'none'};\r\n  }\r\n`;\r\n\r\n// 跟随鼠标的拼图预览\r\nconst DraggingPiecePreview = styled.div<{ \r\n  x: number; \r\n  y: number; \r\n  isVisible: boolean;\r\n}>`\r\n  position: absolute;\r\n  left: ${props => props.x}px;\r\n  top: ${props => props.y}px;\r\n  pointer-events: none;\r\n  opacity: ${props => props.isVisible ? 0.7 : 0};\r\n  transition: opacity 0.1s ease;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst PreviewPieceShape = styled.div<{ rows: number; cols: number }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.cols}, 20px);\r\n  grid-template-rows: repeat($props => props.rows}, 20px);\r\n  gap: 1px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border: 2px solid #FFD700;\r\n  border-radius: 4px;\r\n  padding: 2px;\r\n`;\r\n\r\nconst PreviewCell = styled.div<{ isFilled: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  background: ${props => props.isFilled ? '#FF4444' : 'transparent'};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst GameBoard: React.FC<GameBoardProps> = ({ \r\n  gameState, \r\n  onCellClick, \r\n  onCellHover,\r\n  onPiecePlace\r\n}) => {\r\n  const { board, players, currentPlayerIndex, selectedPiece } = gameState;\r\n  const currentPlayer = players[currentPlayerIndex];\r\n  \r\n  // 拖拽状态\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [mousePosition, setMousePosition] = useState<Position>({ x: 0, y: 0 });\r\n  const [mouseScreenPosition, setMouseScreenPosition] = useState({ x: 0, y: 0 });\r\n  const [dragOffset, setDragOffset] = useState<Position>({ x: 0, y: 0 });\r\n  \r\n  // 检查拼图是否可以放置在指定位置\r\n  const canPlaceAt = (x: number, y: number): boolean => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return false;\r\n    \r\n    const colorIndex = currentPlayerIndex + 1;\r\n    return canPlacePiece(board, selectedPiece, { x, y }, colorIndex);\r\n  };\r\n  \r\n  // 开始拖拽\r\n  const startDrag = (x: number, y: number, e: React.MouseEvent) => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\r\n    \r\n    setIsDragging(true);\r\n    setDragOffset({ x: 0, y: 0 });\r\n    setMousePosition({ x, y });\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n  };\r\n  \r\n  // 从拼图库开始拖拽\r\n  const startDragFromLibrary = (e: React.MouseEvent) => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\r\n    \r\n    setIsDragging(true);\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n    \r\n    // 计算棋盘上的初始位置\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n    setMousePosition({ x, y });\r\n  };\r\n  \r\n  // 拖拽中\r\n  const handleDrag = (e: React.MouseEvent) => {\r\n    if (!isDragging) return;\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n    \r\n    setMousePosition({ x, y });\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n  };\r\n  \r\n  // 结束拖拽\r\n  const endDrag = () => {\r\n    if (!isDragging) return;\r\n    \r\n    setIsDragging(false);\r\n    \r\n    // 检查是否可以放置\r\n    if (canPlaceAt(mousePosition.x, mousePosition.y)) {\r\n      onPiecePlace(mousePosition);\r\n    }\r\n  };\r\n  \r\n  const handleCellClick = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellClick({ x, y });\r\n  };\r\n  \r\n  const handleCellHover = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellHover({ x, y });\r\n  };\r\n  \r\n  // 检查位置是否在拼图范围内\r\n  const isPositionInPiece = (x: number, y: number, pieceX: number, pieceY: number): boolean => {\r\n    if (!selectedPiece) return false;\r\n    \r\n    const { shape } = selectedPiece;\r\n    const relativeX = x - pieceX;\r\n    const relativeY = y - pieceY;\r\n    \r\n    return relativeY >= 0 && relativeY < shape.length && \r\n           relativeX >= 0 && relativeX < shape[0]?.length && \r\n           shape[relativeY][relativeX] === 1;\r\n  };\r\n  \r\n  // 检查位置是否应该高亮（可放置）\r\n  const shouldHighlight = (x: number, y: number): boolean => {\r\n    if (!isDragging || !selectedPiece) return false;\r\n    \r\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && \r\n           canPlaceAt(mousePosition.x, mousePosition.y);\r\n  };\r\n  \r\n  // 检查位置是否应该显示无效提示（不可放置）\r\n  const shouldShowInvalid = (x: number, y: number): boolean => {\r\n    if (!isDragging || !selectedPiece) return false;\r\n    \r\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && \r\n           !canPlaceAt(mousePosition.x, mousePosition.y);\r\n  };\r\n  \r\n  return (\r\n    <BoardContainer>\r\n      <BoardTitle>\r\n        {currentPlayer.name}的回合\r\n        {currentPlayer.color === 'red' && ` - 剩余时间: ${gameState.timeLeft}秒`}\r\n      </BoardTitle>\r\n      <BoardGrid\r\n        onMouseMove={handleDrag}\r\n        onMouseUp={endDrag}\r\n        onMouseLeave={endDrag}\r\n      >\r\n        {board.map((row, y) =>\r\n          row.map((cell, x) => (\r\n            <Cell\r\n              key={`${x}-${y}`}\r\n              isOccupied={cell !== 0}\r\n              playerColor={cell}\r\n              isHighlighted={isDragging && canPlaceAt(mousePosition.x, mousePosition.y) && \r\n                isPositionInPiece(x, y, mousePosition.x, mousePosition.y)}\r\n              isCurrentTurn={currentPlayer.isCurrentTurn}\r\n              onClick={() => handleCellClick(x, y)}\r\n              onMouseEnter={() => handleCellHover(x, y)}\r\n              onMouseDown={(e) => startDrag(x, y, e)}\r\n            />\r\n          ))\r\n        )}\r\n      </BoardGrid>\r\n      \r\n      {/* 跟随鼠标的拼图预览 */}\r\n      {isDragging && selectedPiece && (\r\n        <DraggingPiecePreview\r\n          x={mouseScreenPosition.x - 30}\r\n          y={mouseScreenPosition.y - 30}\r\n          isVisible={isDragging}\r\n        >\r\n          <PreviewPieceShape\r\n            rows={selectedPiece.shape.length}\r\n            cols={selectedPiece.shape[0]?.length || 1}\r\n          >\r\n            {selectedPiece.shape.map((row, rowIndex) =>\r\n              row.map((cell, colIndex) => (\r\n                <PreviewCell\r\n                  key={`${rowIndex}-${colIndex}`}\r\n                  isFilled={cell === 1}\r\n                />\r\n              ))\r\n            )}\r\n          </PreviewPieceShape>\r\n        </DraggingPiecePreview>\r\n      )}\r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}