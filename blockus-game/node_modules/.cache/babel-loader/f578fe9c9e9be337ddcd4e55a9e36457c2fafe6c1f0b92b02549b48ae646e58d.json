{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/blockus new/blockus-game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;// 游戏控制组件\nimport React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ControlsContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 20px;\\n  padding: 20px;\\n  background: #f5f5f5;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\\n\"])));const GameStatus=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 15px;\\n  background: #fff;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  min-width: 300px;\\n\"])));const StatusTitle=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin: 0 0 10px 0;\\n  color: #333;\\n  font-size: 18px;\\n\"])));const StatusText=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 16px;\\n  color: \",\";\\n  font-weight: \",\";\\n\"])),props=>props.isCurrentTurn?'#4CAF50':'#666',props=>props.isCurrentTurn?'bold':'normal');const TimeDisplay=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-size: 24px;\\n  font-weight: bold;\\n  color: \",\";\\n  text-align: center;\\n  margin: 10px 0;\\n\"])),props=>{if(props.timeLeft<=5)return'#f44336';if(props.timeLeft<=10)return'#ff9800';return'#4CAF50';});const ButtonsContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 15px;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n\"])));const Button=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  padding: 12px 24px;\\n  border: none;\\n  border-radius: 6px;\\n  font-size: 16px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  min-width: 120px;\\n  \\n  background: \",\";\\n  \\n  color: white;\\n  \\n  &:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n  }\\n  \\n  &:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n    transform: none;\\n    box-shadow: none;\\n  }\\n\"])),props=>{switch(props.variant){case'primary':return'#4CAF50';case'secondary':return'#2196F3';case'danger':return'#f44336';default:return'#4CAF50';}});const GamePhaseDisplay=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n  border-radius: 6px;\\n  font-weight: bold;\\n  text-align: center;\\n  background: \",\";\\n  color: white;\\n  margin-bottom: 15px;\\n\"])),props=>{switch(props.phase){case'waiting':return'#2196F3';case'playing':return'#4CAF50';case'settling':return'#ff9800';case'finished':return'#f44336';default:return'#666';}});const GameControls=_ref=>{let{gameState,onSettle,onReset}=_ref;const{gamePhase,timeLeft,players,currentPlayerIndex}=gameState;const currentPlayer=players[currentPlayerIndex];const getPhaseText=phase=>{switch(phase){case'waiting':return'等待开始';case'playing':return'游戏进行中';case'settling':return'结算中';case'finished':return'游戏结束';default:return'未知状态';}};const canSettle=currentPlayer.color==='red'&&!currentPlayer.isSettled;const isGameOver=gamePhase==='finished';return/*#__PURE__*/_jsxs(ControlsContainer,{children:[/*#__PURE__*/_jsx(GamePhaseDisplay,{phase:gamePhase,children:getPhaseText(gamePhase)}),/*#__PURE__*/_jsxs(GameStatus,{children:[/*#__PURE__*/_jsx(StatusTitle,{children:\"\\u5F53\\u524D\\u56DE\\u5408\"}),/*#__PURE__*/_jsx(StatusText,{isCurrentTurn:true,children:currentPlayer.name}),gamePhase==='playing'&&currentPlayer.color==='red'&&/*#__PURE__*/_jsxs(TimeDisplay,{timeLeft:timeLeft,children:[\"\\u5269\\u4F59\\u65F6\\u95F4: \",timeLeft,\"\\u79D2\"]}),/*#__PURE__*/_jsxs(StatusText,{isCurrentTurn:false,children:[\"\\u72B6\\u6001: \",currentPlayer.isSettled?'已结算':'进行中']})]}),/*#__PURE__*/_jsxs(ButtonsContainer,{children:[canSettle&&/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onSettle,children:\"\\u7ED3\\u7B97\"}),isGameOver&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:onReset,children:\"\\u91CD\\u65B0\\u5F00\\u59CB\"})]}),isGameOver&&/*#__PURE__*/_jsxs(GameStatus,{children:[/*#__PURE__*/_jsx(StatusTitle,{children:\"\\u6E38\\u620F\\u7ED3\\u679C\"}),players.sort((a,b)=>b.score-a.score).map((player,index)=>/*#__PURE__*/_jsxs(StatusText,{isCurrentTurn:false,children:[index+1,\". \",player.name,\": \",player.score,\"\\u5206\"]},player.id))]})]});};export default GameControls;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","ControlsContainer","div","_templateObject","_taggedTemplateLiteral","GameStatus","_templateObject2","StatusTitle","h3","_templateObject3","StatusText","_templateObject4","props","isCurrentTurn","TimeDisplay","_templateObject5","timeLeft","ButtonsContainer","_templateObject6","Button","button","_templateObject7","variant","GamePhaseDisplay","_templateObject8","phase","GameControls","_ref","gameState","onSettle","onReset","gamePhase","players","currentPlayerIndex","currentPlayer","getPhaseText","canSettle","color","isSettled","isGameOver","children","name","onClick","sort","a","b","score","map","player","index","id"],"sources":["D:/blockus new/blockus-game/src/components/GameControls.tsx"],"sourcesContent":["// 游戏控制组件\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameState } from '../types/game';\r\n\r\ninterface GameControlsProps {\r\n  gameState: GameState;\r\n  onSettle: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst ControlsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst GameStatus = styled.div`\r\n  text-align: center;\r\n  padding: 15px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  min-width: 300px;\r\n`;\r\n\r\nconst StatusTitle = styled.h3`\r\n  margin: 0 0 10px 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst StatusText = styled.div<{ isCurrentTurn: boolean }>`\r\n  font-size: 16px;\r\n  color: ${props => props.isCurrentTurn ? '#4CAF50' : '#666'};\r\n  font-weight: ${props => props.isCurrentTurn ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst TimeDisplay = styled.div<{ timeLeft: number }>`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: ${props => {\r\n    if (props.timeLeft <= 5) return '#f44336';\r\n    if (props.timeLeft <= 10) return '#ff9800';\r\n    return '#4CAF50';\r\n  }};\r\n  text-align: center;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button<{ variant: 'primary' | 'secondary' | 'danger' }>`\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  min-width: 120px;\r\n  \r\n  background: ${props => {\r\n    switch (props.variant) {\r\n      case 'primary': return '#4CAF50';\r\n      case 'secondary': return '#2196F3';\r\n      case 'danger': return '#f44336';\r\n      default: return '#4CAF50';\r\n    }\r\n  }};\r\n  \r\n  color: white;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #ccc;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst GamePhaseDisplay = styled.div<{ phase: string }>`\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background: ${props => {\r\n    switch (props.phase) {\r\n      case 'waiting': return '#2196F3';\r\n      case 'playing': return '#4CAF50';\r\n      case 'settling': return '#ff9800';\r\n      case 'finished': return '#f44336';\r\n      default: return '#666';\r\n    }\r\n  }};\r\n  color: white;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst GameControls: React.FC<GameControlsProps> = ({\r\n  gameState,\r\n  onSettle,\r\n  onReset\r\n}) => {\r\n  const { gamePhase, timeLeft, players, currentPlayerIndex } = gameState;\r\n  const currentPlayer = players[currentPlayerIndex];\r\n  \r\n  const getPhaseText = (phase: string): string => {\r\n    switch (phase) {\r\n      case 'waiting': return '等待开始';\r\n      case 'playing': return '游戏进行中';\r\n      case 'settling': return '结算中';\r\n      case 'finished': return '游戏结束';\r\n      default: return '未知状态';\r\n    }\r\n  };\r\n  \r\n  const canSettle = currentPlayer.color === 'red' && !currentPlayer.isSettled;\r\n  const isGameOver = gamePhase === 'finished';\r\n  \r\n  return (\r\n    <ControlsContainer>\r\n      <GamePhaseDisplay phase={gamePhase}>\r\n        {getPhaseText(gamePhase)}\r\n      </GamePhaseDisplay>\r\n      \r\n      <GameStatus>\r\n        <StatusTitle>当前回合</StatusTitle>\r\n        <StatusText isCurrentTurn={true}>\r\n          {currentPlayer.name}\r\n        </StatusText>\r\n        \r\n        {gamePhase === 'playing' && currentPlayer.color === 'red' && (\r\n          <TimeDisplay timeLeft={timeLeft}>\r\n            剩余时间: {timeLeft}秒\r\n          </TimeDisplay>\r\n        )}\r\n        \r\n        <StatusText isCurrentTurn={false}>\r\n          状态: {currentPlayer.isSettled ? '已结算' : '进行中'}\r\n        </StatusText>\r\n      </GameStatus>\r\n      \r\n      <ButtonsContainer>\r\n        {canSettle && (\r\n          <Button variant=\"secondary\" onClick={onSettle}>\r\n            结算\r\n          </Button>\r\n        )}\r\n        \r\n        {isGameOver && (\r\n          <Button variant=\"primary\" onClick={onReset}>\r\n            重新开始\r\n          </Button>\r\n        )}\r\n      </ButtonsContainer>\r\n      \r\n      {isGameOver && (\r\n        <GameStatus>\r\n          <StatusTitle>游戏结果</StatusTitle>\r\n          {players\r\n            .sort((a, b) => b.score - a.score)\r\n            .map((player, index) => (\r\n              <StatusText key={player.id} isCurrentTurn={false}>\r\n                {index + 1}. {player.name}: {player.score}分\r\n              </StatusText>\r\n            ))\r\n          }\r\n        </GameStatus>\r\n      )}\r\n    </ControlsContainer>\r\n  );\r\n};\r\n\r\nexport default GameControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}