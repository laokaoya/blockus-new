{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/blockus new/blockus-game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;// 游戏棋盘组件\nimport React,{useState,useEffect}from'react';import styled from'styled-components';import{canPlacePiece}from'../utils/gameEngine';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const BoardContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  background: #f5f5f5;\\n  border-radius: 8px;\\n  padding: 20px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  position: relative;\\n\"])));const BoardTitle=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 0 0 20px 0;\\n  color: #333;\\n  font-size: 24px;\\n\"])));const BoardGrid=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(20, 1fr);\\n  grid-template-rows: repeat(20, 1fr);\\n  gap: 1px;\\n  background: #ccc;\\n  border: 2px solid #333;\\n  width: 600px;\\n  height: 600px;\\n  max-width: 90vw;\\n  max-height: 90vw;\\n\"])));const Cell=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  background: \",\";\\n  border: \",\";\\n  cursor: \",\";\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    transform: \",\";\\n    box-shadow: \",\";\\n  }\\n\"])),props=>{if(props.isOccupied){const colors=['transparent','#FF4444','#FFDD44','#4444FF','#44FF44'];return colors[props.playerColor]||'#ccc';}if(props.isHighlighted){return'rgba(255, 255, 0, 0.3)';}if(props.isInvalid){return'rgba(255, 0, 0, 0.2)';}if(props.isCurrentTurn){return'rgba(0, 255, 0, 0.1)';}return'#fff';},props=>{if(props.isHighlighted)return'2px solid #FFD700';if(props.isInvalid)return'2px solid #FF4444';return'1px solid #ddd';},props=>props.isHighlighted?'pointer':'default',props=>props.isHighlighted?'scale(1.1)':'scale(1)',props=>props.isHighlighted?'0 0 8px rgba(255, 215, 0, 0.6)':'none');const GameBoard=_ref=>{let{gameState,onCellClick,onCellHover,onPiecePlace}=_ref;const{board,players,currentPlayerIndex,selectedPiece}=gameState;const currentPlayer=players[currentPlayerIndex];// 拖拽状态\nconst[isDragging,setIsDragging]=useState(false);const[mousePosition,setMousePosition]=useState({x:0,y:0});const[mouseScreenPosition,setMouseScreenPosition]=useState({x:0,y:0});const[dragOffset,setDragOffset]=useState({x:0,y:0});const[dragMode,setDragMode]=useState('none');// 全局鼠标事件监听\nuseEffect(()=>{const handleGlobalMouseMove=e=>{if(dragMode==='dragging'&&selectedPiece){setMouseScreenPosition({x:e.clientX,y:e.clientY});// 计算棋盘上的位置\nconst boardElement=document.querySelector('[data-board-grid]');if(boardElement){const rect=boardElement.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/(rect.width/20));const y=Math.floor((e.clientY-rect.top)/(rect.height/20));if(x>=0&&x<20&&y>=0&&y<20){setMousePosition({x,y});}}}};const handleStartDragFromLibrary=e=>{const{piece,clientX,clientY}=e.detail;setIsDragging(true);setDragMode('dragging');setMouseScreenPosition({x:clientX,y:clientY});// 计算棋盘上的初始位置\nconst boardElement=document.querySelector('[data-board-grid]');if(boardElement){const rect=boardElement.getBoundingClientRect();const x=Math.floor((clientX-rect.left)/(rect.width/20));const y=Math.floor((clientY-rect.top)/(rect.height/20));setMousePosition({x,y});}};if(dragMode==='dragging'){document.addEventListener('mousemove',handleGlobalMouseMove);}// 监听从拼图库开始的拖拽\nconst boardElement=document.querySelector('[data-board-grid]');if(boardElement){boardElement.addEventListener('startDragFromLibrary',handleStartDragFromLibrary);}return()=>{document.removeEventListener('mousemove',handleGlobalMouseMove);if(boardElement){boardElement.removeEventListener('startDragFromLibrary',handleStartDragFromLibrary);}};},[dragMode,selectedPiece]);// 检查拼图是否可以放置在指定位置\nconst canPlaceAt=(x,y)=>{if(!selectedPiece||currentPlayer.color!=='red')return false;const colorIndex=currentPlayerIndex+1;return canPlacePiece(board,selectedPiece,{x,y},colorIndex);};// 开始拖拽\nconst startDrag=(x,y,e)=>{if(!selectedPiece||currentPlayer.color!=='red')return;setIsDragging(true);setDragMode('dragging');setDragOffset({x:0,y:0});setMousePosition({x,y});setMouseScreenPosition({x:e.clientX,y:e.clientY});};// 从拼图库开始拖拽\nconst startDragFromLibrary=e=>{if(!selectedPiece||currentPlayer.color!=='red')return;setIsDragging(true);setDragMode('dragging');setMouseScreenPosition({x:e.clientX,y:e.clientY});// 计算棋盘上的初始位置\nconst rect=e.currentTarget.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/(rect.width/20));const y=Math.floor((e.clientY-rect.top)/(rect.height/20));setMousePosition({x,y});};// 拖拽中\nconst handleDrag=e=>{if(dragMode!=='dragging')return;const rect=e.currentTarget.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/(rect.width/20));const y=Math.floor((e.clientY-rect.top)/(rect.height/20));setMousePosition({x,y});setMouseScreenPosition({x:e.clientX,y:e.clientY});};// 结束拖拽\nconst endDrag=()=>{if(dragMode!=='dragging')return;setIsDragging(false);setDragMode('none');// 检查是否可以放置\nif(canPlaceAt(mousePosition.x,mousePosition.y)){onPiecePlace(mousePosition);}};// 处理棋盘点击（放置拼图）\nconst handleBoardClick=(x,y)=>{if(dragMode==='dragging'&&selectedPiece){// 如果正在拖拽，点击就放置\nif(canPlaceAt(x,y)){onPiecePlace({x,y});setIsDragging(false);setDragMode('none');}}else if(!isDragging){// 如果没有拖拽，正常处理点击\nonCellClick({x,y});}};const handleCellClick=(x,y)=>{if(isDragging)return;onCellClick({x,y});};const handleCellHover=(x,y)=>{if(isDragging)return;onCellHover({x,y});};// 检查位置是否在拼图范围内\nconst isPositionInPiece=(x,y,pieceX,pieceY)=>{var _shape$;if(!selectedPiece)return false;const{shape}=selectedPiece;const relativeX=x-pieceX;const relativeY=y-pieceY;return relativeY>=0&&relativeY<shape.length&&relativeX>=0&&relativeX<((_shape$=shape[0])===null||_shape$===void 0?void 0:_shape$.length)&&shape[relativeY][relativeX]===1;};// 检查位置是否应该高亮（可放置）\nconst shouldHighlight=(x,y)=>{if(dragMode!=='dragging'||!selectedPiece)return false;return isPositionInPiece(x,y,mousePosition.x,mousePosition.y)&&canPlaceAt(mousePosition.x,mousePosition.y);};// 检查位置是否应该显示无效提示（不可放置）\nconst shouldShowInvalid=(x,y)=>{if(dragMode!=='dragging'||!selectedPiece)return false;return isPositionInPiece(x,y,mousePosition.x,mousePosition.y)&&!canPlaceAt(mousePosition.x,mousePosition.y);};return/*#__PURE__*/_jsxs(BoardContainer,{children:[/*#__PURE__*/_jsxs(BoardTitle,{children:[currentPlayer.name,\"\\u7684\\u56DE\\u5408\",currentPlayer.color==='red'&&\" - \\u5269\\u4F59\\u65F6\\u95F4: \".concat(gameState.timeLeft,\"\\u79D2\")]}),/*#__PURE__*/_jsx(BoardGrid,{\"data-board-grid\":true,onMouseMove:handleDrag,children:board.map((row,y)=>row.map((cell,x)=>/*#__PURE__*/_jsx(Cell,{isOccupied:cell!==0,playerColor:cell,isHighlighted:shouldHighlight(x,y),isInvalid:shouldShowInvalid(x,y),isCurrentTurn:currentPlayer.isCurrentTurn,onClick:()=>handleBoardClick(x,y),onMouseEnter:()=>handleCellHover(x,y),onMouseDown:e=>startDrag(x,y,e)},\"\".concat(x,\"-\").concat(y))))})]});};export default GameBoard;","map":{"version":3,"names":["React","useState","useEffect","styled","canPlacePiece","jsxs","_jsxs","jsx","_jsx","BoardContainer","div","_templateObject","_taggedTemplateLiteral","BoardTitle","h2","_templateObject2","BoardGrid","_templateObject3","Cell","_templateObject4","props","isOccupied","colors","playerColor","isHighlighted","isInvalid","isCurrentTurn","GameBoard","_ref","gameState","onCellClick","onCellHover","onPiecePlace","board","players","currentPlayerIndex","selectedPiece","currentPlayer","isDragging","setIsDragging","mousePosition","setMousePosition","x","y","mouseScreenPosition","setMouseScreenPosition","dragOffset","setDragOffset","dragMode","setDragMode","handleGlobalMouseMove","e","clientX","clientY","boardElement","document","querySelector","rect","getBoundingClientRect","Math","floor","left","width","top","height","handleStartDragFromLibrary","piece","detail","addEventListener","removeEventListener","canPlaceAt","color","colorIndex","startDrag","startDragFromLibrary","currentTarget","handleDrag","endDrag","handleBoardClick","handleCellClick","handleCellHover","isPositionInPiece","pieceX","pieceY","_shape$","shape","relativeX","relativeY","length","shouldHighlight","shouldShowInvalid","children","name","concat","timeLeft","onMouseMove","map","row","cell","onClick","onMouseEnter","onMouseDown"],"sources":["D:/blockus new/blockus-game/src/components/GameBoard.tsx"],"sourcesContent":["// 游戏棋盘组件\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameState, Position, Piece } from '../types/game';\r\nimport { canPlacePiece } from '../utils/gameEngine';\r\n\r\ninterface GameBoardProps {\r\n  gameState: GameState;\r\n  onCellClick: (position: Position) => void;\r\n  onCellHover: (position: Position) => void;\r\n  onPiecePlace: (position: Position) => void;\r\n}\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst BoardTitle = styled.h2`\r\n  margin: 0 0 20px 0;\r\n  color: #333;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst BoardGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(20, 1fr);\r\n  grid-template-rows: repeat(20, 1fr);\r\n  gap: 1px;\r\n  background: #ccc;\r\n  border: 2px solid #333;\r\n  width: 600px;\r\n  height: 600px;\r\n  max-width: 90vw;\r\n  max-height: 90vw;\r\n`;\r\n\r\nconst Cell = styled.div<{ \r\n  isOccupied: boolean; \r\n  playerColor: number;\r\n  isHighlighted: boolean;\r\n  isInvalid: boolean;\r\n  isCurrentTurn: boolean;\r\n}>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props => {\r\n    if (props.isOccupied) {\r\n      const colors = ['transparent', '#FF4444', '#FFDD44', '#4444FF', '#44FF44'];\r\n      return colors[props.playerColor] || '#ccc';\r\n    }\r\n    if (props.isHighlighted) {\r\n      return 'rgba(255, 255, 0, 0.3)';\r\n    }\r\n    if (props.isInvalid) {\r\n      return 'rgba(255, 0, 0, 0.2)';\r\n    }\r\n    if (props.isCurrentTurn) {\r\n      return 'rgba(0, 255, 0, 0.1)';\r\n    }\r\n    return '#fff';\r\n  }};\r\n  border: ${props => {\r\n    if (props.isHighlighted) return '2px solid #FFD700';\r\n    if (props.isInvalid) return '2px solid #FF4444';\r\n    return '1px solid #ddd';\r\n  }};\r\n  cursor: ${props => props.isHighlighted ? 'pointer' : 'default'};\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: ${props => props.isHighlighted ? 'scale(1.1)' : 'scale(1)'};\r\n    box-shadow: ${props => props.isHighlighted ? '0 0 8px rgba(255, 215, 0, 0.6)' : 'none'};\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst GameBoard: React.FC<GameBoardProps> = ({ \r\n  gameState, \r\n  onCellClick, \r\n  onCellHover,\r\n  onPiecePlace\r\n}) => {\r\n  const { board, players, currentPlayerIndex, selectedPiece } = gameState;\r\n  const currentPlayer = players[currentPlayerIndex];\r\n  \r\n  // 拖拽状态\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [mousePosition, setMousePosition] = useState<Position>({ x: 0, y: 0 });\r\n  const [mouseScreenPosition, setMouseScreenPosition] = useState({ x: 0, y: 0 });\r\n  const [dragOffset, setDragOffset] = useState<Position>({ x: 0, y: 0 });\r\n  const [dragMode, setDragMode] = useState<'none' | 'dragging' | 'placing'>('none');\r\n  \r\n  // 全局鼠标事件监听\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (e: MouseEvent) => {\r\n      if (dragMode === 'dragging' && selectedPiece) {\r\n        setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n        \r\n        // 计算棋盘上的位置\r\n        const boardElement = document.querySelector('[data-board-grid]');\r\n        if (boardElement) {\r\n          const rect = boardElement.getBoundingClientRect();\r\n          const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n          const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n          \r\n          if (x >= 0 && x < 20 && y >= 0 && y < 20) {\r\n            setMousePosition({ x, y });\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    const handleStartDragFromLibrary = (e: CustomEvent) => {\r\n      const { piece, clientX, clientY } = e.detail;\r\n      setIsDragging(true);\r\n      setDragMode('dragging');\r\n      setMouseScreenPosition({ x: clientX, y: clientY });\r\n      \r\n      // 计算棋盘上的初始位置\r\n      const boardElement = document.querySelector('[data-board-grid]');\r\n      if (boardElement) {\r\n        const rect = boardElement.getBoundingClientRect();\r\n        const x = Math.floor((clientX - rect.left) / (rect.width / 20));\r\n        const y = Math.floor((clientY - rect.top) / (rect.height / 20));\r\n        setMousePosition({ x, y });\r\n      }\r\n    };\r\n    \r\n    if (dragMode === 'dragging') {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove);\r\n    }\r\n    \r\n    // 监听从拼图库开始的拖拽\r\n    const boardElement = document.querySelector('[data-board-grid]');\r\n    if (boardElement) {\r\n      boardElement.addEventListener('startDragFromLibrary', handleStartDragFromLibrary as EventListener);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\r\n      if (boardElement) {\r\n        boardElement.removeEventListener('startDragFromLibrary', handleStartDragFromLibrary as EventListener);\r\n      }\r\n    };\r\n  }, [dragMode, selectedPiece]);\r\n  \r\n  // 检查拼图是否可以放置在指定位置\r\n  const canPlaceAt = (x: number, y: number): boolean => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return false;\r\n    \r\n    const colorIndex = currentPlayerIndex + 1;\r\n    return canPlacePiece(board, selectedPiece, { x, y }, colorIndex);\r\n  };\r\n  \r\n  // 开始拖拽\r\n  const startDrag = (x: number, y: number, e: React.MouseEvent) => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\r\n    \r\n    setIsDragging(true);\r\n    setDragMode('dragging');\r\n    setDragOffset({ x: 0, y: 0 });\r\n    setMousePosition({ x, y });\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n  };\r\n  \r\n  // 从拼图库开始拖拽\r\n  const startDragFromLibrary = (e: React.MouseEvent) => {\r\n    if (!selectedPiece || currentPlayer.color !== 'red') return;\r\n    \r\n    setIsDragging(true);\r\n    setDragMode('dragging');\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n    \r\n    // 计算棋盘上的初始位置\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n    setMousePosition({ x, y });\r\n  };\r\n  \r\n  // 拖拽中\r\n  const handleDrag = (e: React.MouseEvent) => {\r\n    if (dragMode !== 'dragging') return;\r\n    \r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = Math.floor((e.clientX - rect.left) / (rect.width / 20));\r\n    const y = Math.floor((e.clientY - rect.top) / (rect.height / 20));\r\n    \r\n    setMousePosition({ x, y });\r\n    setMouseScreenPosition({ x: e.clientX, y: e.clientY });\r\n  };\r\n  \r\n  // 结束拖拽\r\n  const endDrag = () => {\r\n    if (dragMode !== 'dragging') return;\r\n    \r\n    setIsDragging(false);\r\n    setDragMode('none');\r\n    \r\n    // 检查是否可以放置\r\n    if (canPlaceAt(mousePosition.x, mousePosition.y)) {\r\n      onPiecePlace(mousePosition);\r\n    }\r\n  };\r\n  \r\n  // 处理棋盘点击（放置拼图）\r\n  const handleBoardClick = (x: number, y: number) => {\r\n    if (dragMode === 'dragging' && selectedPiece) {\r\n      // 如果正在拖拽，点击就放置\r\n      if (canPlaceAt(x, y)) {\r\n        onPiecePlace({ x, y });\r\n        setIsDragging(false);\r\n        setDragMode('none');\r\n      }\r\n    } else if (!isDragging) {\r\n      // 如果没有拖拽，正常处理点击\r\n      onCellClick({ x, y });\r\n    }\r\n  };\r\n  \r\n  const handleCellClick = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellClick({ x, y });\r\n  };\r\n  \r\n  const handleCellHover = (x: number, y: number) => {\r\n    if (isDragging) return;\r\n    onCellHover({ x, y });\r\n  };\r\n  \r\n  // 检查位置是否在拼图范围内\r\n  const isPositionInPiece = (x: number, y: number, pieceX: number, pieceY: number): boolean => {\r\n    if (!selectedPiece) return false;\r\n    \r\n    const { shape } = selectedPiece;\r\n    const relativeX = x - pieceX;\r\n    const relativeY = y - pieceY;\r\n    \r\n    return relativeY >= 0 && relativeY < shape.length && \r\n           relativeX >= 0 && relativeX < shape[0]?.length && \r\n           shape[relativeY][relativeX] === 1;\r\n  };\r\n  \r\n  // 检查位置是否应该高亮（可放置）\r\n  const shouldHighlight = (x: number, y: number): boolean => {\r\n    if (dragMode !== 'dragging' || !selectedPiece) return false;\r\n    \r\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && \r\n           canPlaceAt(mousePosition.x, mousePosition.y);\r\n  };\r\n  \r\n  // 检查位置是否应该显示无效提示（不可放置）\r\n  const shouldShowInvalid = (x: number, y: number): boolean => {\r\n    if (dragMode !== 'dragging' || !selectedPiece) return false;\r\n    \r\n    return isPositionInPiece(x, y, mousePosition.x, mousePosition.y) && \r\n           !canPlaceAt(mousePosition.x, mousePosition.y);\r\n  };\r\n  \r\n  return (\r\n    <BoardContainer>\r\n      <BoardTitle>\r\n        {currentPlayer.name}的回合\r\n        {currentPlayer.color === 'red' && ` - 剩余时间: ${gameState.timeLeft}秒`}\r\n      </BoardTitle>\r\n             <BoardGrid\r\n         data-board-grid\r\n         onMouseMove={handleDrag}\r\n       >\r\n        {board.map((row, y) =>\r\n          row.map((cell, x) => (\r\n                         <Cell\r\n               key={`${x}-${y}`}\r\n               isOccupied={cell !== 0}\r\n               playerColor={cell}\r\n               isHighlighted={shouldHighlight(x, y)}\r\n               isInvalid={shouldShowInvalid(x, y)}\r\n               isCurrentTurn={currentPlayer.isCurrentTurn}\r\n               onClick={() => handleBoardClick(x, y)}\r\n               onMouseEnter={() => handleCellHover(x, y)}\r\n               onMouseDown={(e) => startDrag(x, y, e)}\r\n             />\r\n          ))\r\n        )}\r\n      </BoardGrid>\r\n      \r\n             \r\n    </BoardContainer>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}