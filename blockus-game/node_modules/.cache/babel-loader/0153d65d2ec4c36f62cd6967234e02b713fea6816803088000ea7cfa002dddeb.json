{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockus new\\\\blockus-game\\\\src\\\\components\\\\GameControls.tsx\";\n// 游戏控制组件\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  background: #f5f5f5;\n  border-radius: 8px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n`;\n_c = ControlsContainer;\nconst GameStatus = styled.div`\n  text-align: center;\n  padding: 15px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-width: 300px;\n`;\n_c2 = GameStatus;\nconst StatusTitle = styled.h3`\n  margin: 0 0 10px 0;\n  color: #333;\n  font-size: 18px;\n`;\n_c3 = StatusTitle;\nconst StatusText = styled.div`\n  font-size: 16px;\n  color: ${props => props.isCurrentTurn ? '#4CAF50' : '#666'};\n  font-weight: ${props => props.isCurrentTurn ? 'bold' : 'normal'};\n`;\n_c4 = StatusText;\nconst TimeDisplay = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  color: ${props => {\n  if (props.timeLeft <= 5) return '#f44336';\n  if (props.timeLeft <= 10) return '#ff9800';\n  return '#4CAF50';\n}};\n  text-align: center;\n  margin: 10px 0;\n`;\n_c5 = TimeDisplay;\nconst ButtonsContainer = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c6 = ButtonsContainer;\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 6px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-width: 120px;\n  \n  background: ${props => {\n  switch (props.variant) {\n    case 'primary':\n      return '#4CAF50';\n    case 'secondary':\n      return '#2196F3';\n    case 'danger':\n      return '#f44336';\n    default:\n      return '#4CAF50';\n  }\n}};\n  \n  color: white;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n  \n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n_c7 = Button;\nconst GamePhaseDisplay = styled.div`\n  padding: 10px 20px;\n  border-radius: 6px;\n  font-weight: bold;\n  text-align: center;\n  background: ${props => {\n  switch (props.phase) {\n    case 'waiting':\n      return '#2196F3';\n    case 'playing':\n      return '#4CAF50';\n    case 'settling':\n      return '#ff9800';\n    case 'finished':\n      return '#f44336';\n    default:\n      return '#666';\n  }\n}};\n  color: white;\n  margin-bottom: 15px;\n`;\n_c8 = GamePhaseDisplay;\nconst GameControls = ({\n  gameState,\n  onSettle,\n  onReset\n}) => {\n  const {\n    gamePhase,\n    timeLeft,\n    players,\n    currentPlayerIndex\n  } = gameState;\n  const currentPlayer = players[currentPlayerIndex];\n  const getPhaseText = phase => {\n    switch (phase) {\n      case 'waiting':\n        return '等待开始';\n      case 'playing':\n        return '游戏进行中';\n      case 'settling':\n        return '结算中';\n      case 'finished':\n        return '游戏结束';\n      default:\n        return '未知状态';\n    }\n  };\n  const canSettle = currentPlayer.color === 'red' && !currentPlayer.isSettled;\n  const isGameOver = gamePhase === 'finished';\n  return /*#__PURE__*/_jsxDEV(ControlsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GamePhaseDisplay, {\n      phase: gamePhase,\n      children: getPhaseText(gamePhase)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameStatus, {\n      children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n        children: \"\\u5F53\\u524D\\u56DE\\u5408\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatusText, {\n        isCurrentTurn: true,\n        children: currentPlayer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), gamePhase === 'playing' && currentPlayer.color === 'red' && /*#__PURE__*/_jsxDEV(TimeDisplay, {\n        timeLeft: timeLeft,\n        children: [\"\\u5269\\u4F59\\u65F6\\u95F4: \", timeLeft, \"\\u79D2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatusText, {\n        isCurrentTurn: false,\n        children: [\"\\u72B6\\u6001: \", currentPlayer.isSettled ? '已结算' : '进行中']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n      children: [canSettle && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onSettle,\n        children: \"\\u7ED3\\u7B97\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), isGameOver && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: onReset,\n        children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameStatus, {\n      children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n        children: \"\\u6E38\\u620F\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), players.sort((a, b) => b.score - a.score).map((player, index) => /*#__PURE__*/_jsxDEV(StatusText, {\n        isCurrentTurn: false,\n        children: [index + 1, \". \", player.name, \": \", player.score, \"\\u5206\"]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_c9 = GameControls;\nexport default GameControls;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ControlsContainer\");\n$RefreshReg$(_c2, \"GameStatus\");\n$RefreshReg$(_c3, \"StatusTitle\");\n$RefreshReg$(_c4, \"StatusText\");\n$RefreshReg$(_c5, \"TimeDisplay\");\n$RefreshReg$(_c6, \"ButtonsContainer\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"GamePhaseDisplay\");\n$RefreshReg$(_c9, \"GameControls\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","ControlsContainer","div","_c","GameStatus","_c2","StatusTitle","h3","_c3","StatusText","props","isCurrentTurn","_c4","TimeDisplay","timeLeft","_c5","ButtonsContainer","_c6","Button","button","variant","_c7","GamePhaseDisplay","phase","_c8","GameControls","gameState","onSettle","onReset","gamePhase","players","currentPlayerIndex","currentPlayer","getPhaseText","canSettle","color","isSettled","isGameOver","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","sort","a","b","score","map","player","index","id","_c9","$RefreshReg$"],"sources":["D:/blockus new/blockus-game/src/components/GameControls.tsx"],"sourcesContent":["// 游戏控制组件\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameState } from '../types/game';\r\n\r\ninterface GameControlsProps {\r\n  gameState: GameState;\r\n  onSettle: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst ControlsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst GameStatus = styled.div`\r\n  text-align: center;\r\n  padding: 15px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  min-width: 300px;\r\n`;\r\n\r\nconst StatusTitle = styled.h3`\r\n  margin: 0 0 10px 0;\r\n  color: #333;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst StatusText = styled.div<{ isCurrentTurn: boolean }>`\r\n  font-size: 16px;\r\n  color: ${props => props.isCurrentTurn ? '#4CAF50' : '#666'};\r\n  font-weight: ${props => props.isCurrentTurn ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst TimeDisplay = styled.div<{ timeLeft: number }>`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: ${props => {\r\n    if (props.timeLeft <= 5) return '#f44336';\r\n    if (props.timeLeft <= 10) return '#ff9800';\r\n    return '#4CAF50';\r\n  }};\r\n  text-align: center;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button<{ variant: 'primary' | 'secondary' | 'danger' }>`\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  min-width: 120px;\r\n  \r\n  background: ${props => {\r\n    switch (props.variant) {\r\n      case 'primary': return '#4CAF50';\r\n      case 'secondary': return '#2196F3';\r\n      case 'danger': return '#f44336';\r\n      default: return '#4CAF50';\r\n    }\r\n  }};\r\n  \r\n  color: white;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #ccc;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst GamePhaseDisplay = styled.div<{ phase: string }>`\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background: ${props => {\r\n    switch (props.phase) {\r\n      case 'waiting': return '#2196F3';\r\n      case 'playing': return '#4CAF50';\r\n      case 'settling': return '#ff9800';\r\n      case 'finished': return '#f44336';\r\n      default: return '#666';\r\n    }\r\n  }};\r\n  color: white;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst GameControls: React.FC<GameControlsProps> = ({\r\n  gameState,\r\n  onSettle,\r\n  onReset\r\n}) => {\r\n  const { gamePhase, timeLeft, players, currentPlayerIndex } = gameState;\r\n  const currentPlayer = players[currentPlayerIndex];\r\n  \r\n  const getPhaseText = (phase: string): string => {\r\n    switch (phase) {\r\n      case 'waiting': return '等待开始';\r\n      case 'playing': return '游戏进行中';\r\n      case 'settling': return '结算中';\r\n      case 'finished': return '游戏结束';\r\n      default: return '未知状态';\r\n    }\r\n  };\r\n  \r\n  const canSettle = currentPlayer.color === 'red' && !currentPlayer.isSettled;\r\n  const isGameOver = gamePhase === 'finished';\r\n  \r\n  return (\r\n    <ControlsContainer>\r\n      <GamePhaseDisplay phase={gamePhase}>\r\n        {getPhaseText(gamePhase)}\r\n      </GamePhaseDisplay>\r\n      \r\n      <GameStatus>\r\n        <StatusTitle>当前回合</StatusTitle>\r\n        <StatusText isCurrentTurn={true}>\r\n          {currentPlayer.name}\r\n        </StatusText>\r\n        \r\n        {gamePhase === 'playing' && currentPlayer.color === 'red' && (\r\n          <TimeDisplay timeLeft={timeLeft}>\r\n            剩余时间: {timeLeft}秒\r\n          </TimeDisplay>\r\n        )}\r\n        \r\n        <StatusText isCurrentTurn={false}>\r\n          状态: {currentPlayer.isSettled ? '已结算' : '进行中'}\r\n        </StatusText>\r\n      </GameStatus>\r\n      \r\n      <ButtonsContainer>\r\n        {canSettle && (\r\n          <Button variant=\"secondary\" onClick={onSettle}>\r\n            结算\r\n          </Button>\r\n        )}\r\n        \r\n        {isGameOver && (\r\n          <Button variant=\"primary\" onClick={onReset}>\r\n            重新开始\r\n          </Button>\r\n        )}\r\n      </ButtonsContainer>\r\n      \r\n      {isGameOver && (\r\n        <GameStatus>\r\n          <StatusTitle>游戏结果</StatusTitle>\r\n          {players\r\n            .sort((a, b) => b.score - a.score)\r\n            .map((player, index) => (\r\n              <StatusText key={player.id} isCurrentTurn={false}>\r\n                {index + 1}. {player.name}: {player.score}分\r\n              </StatusText>\r\n            ))\r\n          }\r\n        </GameStatus>\r\n      )}\r\n    </ControlsContainer>\r\n  );\r\n};\r\n\r\nexport default GameControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}