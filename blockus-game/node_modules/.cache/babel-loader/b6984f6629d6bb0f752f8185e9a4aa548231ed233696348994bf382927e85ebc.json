{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockus new\\\\blockus-game\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\n// 主游戏组件\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useGameState } from '../hooks/useGameState';\nimport GameBoard from './GameBoard';\nimport PlayerPieceLibrary from './PlayerPieceLibrary';\nimport AIPlayersInfo from './AIPlayersInfo';\nimport GameControls from './GameControls';\nimport { canPlacePiece } from '../utils/gameEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n`;\n_c = GameContainer;\nconst GameHeader = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n_c2 = GameHeader;\nconst GameTitle = styled.h1`\n  color: white;\n  font-size: 36px;\n  margin: 0;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n_c3 = GameTitle;\nconst GameSubtitle = styled.p`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 18px;\n  margin: 10px 0 0 0;\n`;\n_c4 = GameSubtitle;\nconst GameContent = styled.div`\n  display: flex;\n  gap: 20px;\n  flex: 1;\n  justify-content: center;\n  align-items: flex-start;\n  \n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n_c5 = GameContent;\nconst LeftPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-width: 320px;\n`;\n_c6 = LeftPanel;\nconst CenterPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n_c7 = CenterPanel;\nconst RightPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-width: 280px;\n`;\n_c8 = RightPanel;\nconst Game = () => {\n  _s();\n  const {\n    gameState,\n    selectPiece,\n    placePieceOnBoard,\n    settlePlayer,\n    resetGame\n  } = useGameState();\n  const [hoveredPosition, setHoveredPosition] = useState(null);\n  const currentPlayer = gameState.players[gameState.currentPlayerIndex];\n  const player = gameState.players[0]; // 玩家（红色）\n  const aiPlayers = gameState.players.slice(1); // AI玩家\n\n  // 处理拼图选择\n  const handlePieceSelect = piece => {\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\n      selectPiece(piece);\n    }\n  };\n\n  // 处理拼图拖拽开始\n  const handleStartDrag = (piece, e) => {\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\n      selectPiece(piece);\n      // 这里可以添加拖拽开始的逻辑\n    }\n  };\n\n  // 处理棋盘点击\n  const handleBoardClick = position => {\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\n      const success = placePieceOnBoard(position);\n      if (success) {\n        console.log('拼图放置成功');\n      } else {\n        console.log('无法在此位置放置拼图');\n      }\n    }\n  };\n\n  // 处理拼图放置（拖拽结束）\n  const handlePiecePlace = position => {\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\n      const success = placePieceOnBoard(position);\n      if (success) {\n        console.log('拼图放置成功');\n      } else {\n        console.log('无法在此位置放置拼图');\n      }\n    }\n  };\n\n  // 处理棋盘悬停\n  const handleBoardHover = position => {\n    setHoveredPosition(position);\n  };\n\n  // 处理结算\n  const handleSettle = () => {\n    settlePlayer();\n  };\n\n  // 处理重置游戏\n  const handleReset = () => {\n    resetGame();\n  };\n\n  // 检查拼图是否可以放置在指定位置\n  const canPlaceAt = (x, y) => {\n    if (!gameState.selectedPiece || currentPlayer.color !== 'red') return false;\n    const colorIndex = 1; // 红色玩家的索引\n    return canPlacePiece(gameState.board, gameState.selectedPiece, {\n      x,\n      y\n    }, colorIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(GameTitle, {\n        children: \"Blockus \\u65B9\\u683C\\u5927\\u6218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameSubtitle, {\n        children: \"\\u7ECF\\u5178\\u7B56\\u7565\\u62FC\\u56FE\\u6E38\\u620F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        children: /*#__PURE__*/_jsxDEV(PlayerPieceLibrary, {\n          player: player,\n          selectedPiece: gameState.selectedPiece,\n          onPieceSelect: handlePieceSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CenterPanel, {\n        children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n          gameState: gameState,\n          onCellClick: handleBoardClick,\n          onCellHover: handleBoardHover,\n          onPiecePlace: handlePiecePlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameControls, {\n          gameState: gameState,\n          onSettle: handleSettle,\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        children: /*#__PURE__*/_jsxDEV(AIPlayersInfo, {\n          aiPlayers: aiPlayers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"zqnM5HylIEx8gjMmcMSAJJgcbB8=\", false, function () {\n  return [useGameState];\n});\n_c9 = Game;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"GameHeader\");\n$RefreshReg$(_c3, \"GameTitle\");\n$RefreshReg$(_c4, \"GameSubtitle\");\n$RefreshReg$(_c5, \"GameContent\");\n$RefreshReg$(_c6, \"LeftPanel\");\n$RefreshReg$(_c7, \"CenterPanel\");\n$RefreshReg$(_c8, \"RightPanel\");\n$RefreshReg$(_c9, \"Game\");","map":{"version":3,"names":["React","useState","styled","useGameState","GameBoard","PlayerPieceLibrary","AIPlayersInfo","GameControls","canPlacePiece","jsxDEV","_jsxDEV","GameContainer","div","_c","GameHeader","_c2","GameTitle","h1","_c3","GameSubtitle","p","_c4","GameContent","_c5","LeftPanel","_c6","CenterPanel","_c7","RightPanel","_c8","Game","_s","gameState","selectPiece","placePieceOnBoard","settlePlayer","resetGame","hoveredPosition","setHoveredPosition","currentPlayer","players","currentPlayerIndex","player","aiPlayers","slice","handlePieceSelect","piece","color","isUsed","handleStartDrag","e","handleBoardClick","position","selectedPiece","success","console","log","handlePiecePlace","handleBoardHover","handleSettle","handleReset","canPlaceAt","x","y","colorIndex","board","children","fileName","_jsxFileName","lineNumber","columnNumber","onPieceSelect","onCellClick","onCellHover","onPiecePlace","onSettle","onReset","_c9","$RefreshReg$"],"sources":["D:/blockus new/blockus-game/src/components/Game.tsx"],"sourcesContent":["// 主游戏组件\r\n\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGameState } from '../hooks/useGameState';\r\nimport GameBoard from './GameBoard';\r\nimport PlayerPieceLibrary from './PlayerPieceLibrary';\r\nimport AIPlayersInfo from './AIPlayersInfo';\r\nimport GameControls from './GameControls';\r\nimport { Position, Piece } from '../types/game';\r\nimport { canPlacePiece } from '../utils/gameEngine';\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 20px;\r\n`;\r\n\r\nconst GameHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst GameTitle = styled.h1`\r\n  color: white;\r\n  font-size: 36px;\r\n  margin: 0;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst GameSubtitle = styled.p`\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-size: 18px;\r\n  margin: 10px 0 0 0;\r\n`;\r\n\r\nconst GameContent = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  \r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-width: 320px;\r\n`;\r\n\r\nconst CenterPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  min-width: 280px;\r\n`;\r\n\r\nconst Game: React.FC = () => {\r\n  const { gameState, selectPiece, placePieceOnBoard, settlePlayer, resetGame } = useGameState();\r\n  const [hoveredPosition, setHoveredPosition] = useState<Position | null>(null);\r\n  \r\n  const currentPlayer = gameState.players[gameState.currentPlayerIndex];\r\n  const player = gameState.players[0]; // 玩家（红色）\r\n  const aiPlayers = gameState.players.slice(1); // AI玩家\r\n  \r\n  // 处理拼图选择\r\n  const handlePieceSelect = (piece: Piece) => {\r\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\r\n      selectPiece(piece);\r\n    }\r\n  };\r\n  \r\n  // 处理拼图拖拽开始\r\n  const handleStartDrag = (piece: Piece, e: React.MouseEvent) => {\r\n    if (currentPlayer.color === 'red' && !piece.isUsed) {\r\n      selectPiece(piece);\r\n      // 这里可以添加拖拽开始的逻辑\r\n    }\r\n  };\r\n  \r\n  // 处理棋盘点击\r\n  const handleBoardClick = (position: Position) => {\r\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\r\n      const success = placePieceOnBoard(position);\r\n      if (success) {\r\n        console.log('拼图放置成功');\r\n      } else {\r\n        console.log('无法在此位置放置拼图');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 处理拼图放置（拖拽结束）\r\n  const handlePiecePlace = (position: Position) => {\r\n    if (currentPlayer.color === 'red' && gameState.selectedPiece) {\r\n      const success = placePieceOnBoard(position);\r\n      if (success) {\r\n        console.log('拼图放置成功');\r\n      } else {\r\n        console.log('无法在此位置放置拼图');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 处理棋盘悬停\r\n  const handleBoardHover = (position: Position) => {\r\n    setHoveredPosition(position);\r\n  };\r\n  \r\n  // 处理结算\r\n  const handleSettle = () => {\r\n    settlePlayer();\r\n  };\r\n  \r\n  // 处理重置游戏\r\n  const handleReset = () => {\r\n    resetGame();\r\n  };\r\n  \r\n  // 检查拼图是否可以放置在指定位置\r\n  const canPlaceAt = (x: number, y: number): boolean => {\r\n    if (!gameState.selectedPiece || currentPlayer.color !== 'red') return false;\r\n    \r\n    const colorIndex = 1; // 红色玩家的索引\r\n    return canPlacePiece(gameState.board, gameState.selectedPiece, { x, y }, colorIndex);\r\n  };\r\n  \r\n  return (\r\n    <GameContainer>\r\n      <GameHeader>\r\n        <GameTitle>Blockus 方格大战</GameTitle>\r\n        <GameSubtitle>经典策略拼图游戏</GameSubtitle>\r\n      </GameHeader>\r\n      \r\n      <GameContent>\r\n        {/* 左侧：玩家拼图库 */}\r\n        <LeftPanel>\r\n          <PlayerPieceLibrary\r\n            player={player}\r\n            selectedPiece={gameState.selectedPiece}\r\n            onPieceSelect={handlePieceSelect}\r\n          />\r\n        </LeftPanel>\r\n        \r\n        {/* 中央：游戏棋盘和控制 */}\r\n        <CenterPanel>\r\n          <GameBoard\r\n            gameState={gameState}\r\n            onCellClick={handleBoardClick}\r\n            onCellHover={handleBoardHover}\r\n            onPiecePlace={handlePiecePlace}\r\n          />\r\n          \r\n          <GameControls\r\n            gameState={gameState}\r\n            onSettle={handleSettle}\r\n            onReset={handleReset}\r\n          />\r\n        </CenterPanel>\r\n        \r\n        {/* 右侧：AI玩家信息 */}\r\n        <RightPanel>\r\n          <AIPlayersInfo aiPlayers={aiPlayers} />\r\n        </RightPanel>\r\n      </GameContent>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAASC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGT,MAAM,CAACU,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,aAAa;AAQnB,MAAMG,UAAU,GAAGZ,MAAM,CAACU,GAAG;AAC7B;AACA;AACA,CAAC;AAACG,GAAA,GAHID,UAAU;AAKhB,MAAME,SAAS,GAAGd,MAAM,CAACe,EAAE;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,SAAS;AAOf,MAAMG,YAAY,GAAGjB,MAAM,CAACkB,CAAC;AAC7B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,YAAY;AAMlB,MAAMG,WAAW,GAAGpB,MAAM,CAACU,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAXID,WAAW;AAajB,MAAME,SAAS,GAAGtB,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GALID,SAAS;AAOf,MAAME,WAAW,GAAGxB,MAAM,CAACU,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GALID,WAAW;AAOjB,MAAME,UAAU,GAAG1B,MAAM,CAACU,GAAG;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACiB,GAAA,GALID,UAAU;AAOhB,MAAME,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGjC,YAAY,CAAC,CAAC;EAC7F,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,QAAQ,CAAkB,IAAI,CAAC;EAE7E,MAAMsC,aAAa,GAAGP,SAAS,CAACQ,OAAO,CAACR,SAAS,CAACS,kBAAkB,CAAC;EACrE,MAAMC,MAAM,GAAGV,SAAS,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMG,SAAS,GAAGX,SAAS,CAACQ,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMC,iBAAiB,GAAIC,KAAY,IAAK;IAC1C,IAAIP,aAAa,CAACQ,KAAK,KAAK,KAAK,IAAI,CAACD,KAAK,CAACE,MAAM,EAAE;MAClDf,WAAW,CAACa,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMG,eAAe,GAAGA,CAACH,KAAY,EAAEI,CAAmB,KAAK;IAC7D,IAAIX,aAAa,CAACQ,KAAK,KAAK,KAAK,IAAI,CAACD,KAAK,CAACE,MAAM,EAAE;MAClDf,WAAW,CAACa,KAAK,CAAC;MAClB;IACF;EACF,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAIC,QAAkB,IAAK;IAC/C,IAAIb,aAAa,CAACQ,KAAK,KAAK,KAAK,IAAIf,SAAS,CAACqB,aAAa,EAAE;MAC5D,MAAMC,OAAO,GAAGpB,iBAAiB,CAACkB,QAAQ,CAAC;MAC3C,IAAIE,OAAO,EAAE;QACXC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B;IACF;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIL,QAAkB,IAAK;IAC/C,IAAIb,aAAa,CAACQ,KAAK,KAAK,KAAK,IAAIf,SAAS,CAACqB,aAAa,EAAE;MAC5D,MAAMC,OAAO,GAAGpB,iBAAiB,CAACkB,QAAQ,CAAC;MAC3C,IAAIE,OAAO,EAAE;QACXC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B;IACF;EACF,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAIN,QAAkB,IAAK;IAC/Cd,kBAAkB,CAACc,QAAQ,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBxB,YAAY,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACxBxB,SAAS,CAAC,CAAC;EACb,CAAC;;EAED;EACA,MAAMyB,UAAU,GAAGA,CAACC,CAAS,EAAEC,CAAS,KAAc;IACpD,IAAI,CAAC/B,SAAS,CAACqB,aAAa,IAAId,aAAa,CAACQ,KAAK,KAAK,KAAK,EAAE,OAAO,KAAK;IAE3E,MAAMiB,UAAU,GAAG,CAAC,CAAC,CAAC;IACtB,OAAOxD,aAAa,CAACwB,SAAS,CAACiC,KAAK,EAAEjC,SAAS,CAACqB,aAAa,EAAE;MAAES,CAAC;MAAEC;IAAE,CAAC,EAAEC,UAAU,CAAC;EACtF,CAAC;EAED,oBACEtD,OAAA,CAACC,aAAa;IAAAuD,QAAA,gBACZxD,OAAA,CAACI,UAAU;MAAAoD,QAAA,gBACTxD,OAAA,CAACM,SAAS;QAAAkD,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACnC5D,OAAA,CAACS,YAAY;QAAA+C,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEb5D,OAAA,CAACY,WAAW;MAAA4C,QAAA,gBAEVxD,OAAA,CAACc,SAAS;QAAA0C,QAAA,eACRxD,OAAA,CAACL,kBAAkB;UACjBqC,MAAM,EAAEA,MAAO;UACfW,aAAa,EAAErB,SAAS,CAACqB,aAAc;UACvCkB,aAAa,EAAE1B;QAAkB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAGZ5D,OAAA,CAACgB,WAAW;QAAAwC,QAAA,gBACVxD,OAAA,CAACN,SAAS;UACR4B,SAAS,EAAEA,SAAU;UACrBwC,WAAW,EAAErB,gBAAiB;UAC9BsB,WAAW,EAAEf,gBAAiB;UAC9BgB,YAAY,EAAEjB;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eAEF5D,OAAA,CAACH,YAAY;UACXyB,SAAS,EAAEA,SAAU;UACrB2C,QAAQ,EAAEhB,YAAa;UACvBiB,OAAO,EAAEhB;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAGd5D,OAAA,CAACkB,UAAU;QAAAsC,QAAA,eACTxD,OAAA,CAACJ,aAAa;UAACqC,SAAS,EAAEA;QAAU;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACvC,EAAA,CA9GID,IAAc;EAAA,QAC6D3B,YAAY;AAAA;AAAA0E,GAAA,GADvF/C,IAAc;AAgHpB,eAAeA,IAAI;AAAC,IAAAjB,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAgD,GAAA;AAAAC,YAAA,CAAAjE,EAAA;AAAAiE,YAAA,CAAA/D,GAAA;AAAA+D,YAAA,CAAA5D,GAAA;AAAA4D,YAAA,CAAAzD,GAAA;AAAAyD,YAAA,CAAAvD,GAAA;AAAAuD,YAAA,CAAArD,GAAA;AAAAqD,YAAA,CAAAnD,GAAA;AAAAmD,YAAA,CAAAjD,GAAA;AAAAiD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}